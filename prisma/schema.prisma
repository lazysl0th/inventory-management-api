generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String?
  googleId String? @unique
  facebookId String? @unique
  roles UserRole[]
  status Status @default(Active)
  createdAt DateTime @default(now())
  inventories Inventory[]
  comments Comment[]
}

model Inventory {
  id Int @id @default(autoincrement())
  title String
  description String?
  category String
  isPublic Boolean @default(false)
  ownerId Int
  owner User @relation(fields: [ownerId], references: [id])
  fields InventoryField[]
  items Item[]
  tags Tag[] @relation("InventoryTags")
  comments Comment[]
  createdAt DateTime @default(now())
}

model InventoryField {
  id Int @id @default(autoincrement())
  inventory Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId Int
  title String
  type FieldType
  description String?
  showInTable Boolean @default(true)
  order Int
}

model Item {
  id Int @id @default(autoincrement())
  inventory Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId Int
  customId String
  createdBy Int
  createdAt DateTime @default(now())
  values ItemValue[]
}

model ItemValue {
  id Int @id @default(autoincrement())
  item Item @relation(fields: [itemId], references: [id])
  itemId Int
  fieldId Int
  value String
}

model Comment {
  id Int @id @default(autoincrement())
  content String
  user User @relation(fields: [userId], references: [id])
  userId Int
  inventory Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId Int
  createdAt DateTime @default(now())
}

model Tag {
  id Int @id @default(autoincrement())
  name String @unique
  inventories Inventory[] @relation("InventoryTags")
}

model Role {
  id Int @id @default(autoincrement())
  name RoleName @unique
  users UserRole[]
}

model UserRole {
  userId Int
  roleId Int
  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])
  @@id([userId, roleId])
}

enum RoleName {
  User
  Admin
}

enum Status {
  Active
  Blocked
}

enum FieldType {
  TEXT
  LONGTEXT
  NUMBER
  FILE
  BOOLEAN
}